#summary Instruções sobre a utilização do Software
= Projeto Easytesting =

* Autores: * Thiago Noronha, Gabriel Guedes e Matheus Pacheco

== Introdução ==

Com a adoção de várias universidades federais ao programa de  Reestruturação e Expansão das Universidades Federais - REUNI, espera-se um grande aumento no número de alunos por turma nas disciplinas de ensino de programação de computadores. Com o aumento da relação aluno/professor, torna-se necessário desenvolver ferramentas e metodologias para garantir a qualidade do ensino. Este trabalho pretende auxiliar o ensino de linguagens de programação com uma metodologia de correção automática de listas de exercícios através de conjuntos de teste de unidade[http://pt.wikipedia.org/wiki/Teste_de_unidade 1.]

Na abordagem baseada em testes de unidade, os exercícios programados
pelos alunos são testados função por função. Caso haja algum erro no
código do aluno, o erro é detectado e comunicado ao aluno
imediatamente, junto com uma mensagem explicando onde está o erro e
como ele possivelmente pode ser solucionado.

== Conteúdos Abordados ==

Este projeto aborda diferentes temas ligados a programação básica lecionados pelos professores. A lista desses temas se encontra abaixo:



==== Programação Básica Nível 1 ====


|| *Tópico* || *Assuntos abordados* || *Requisitos* ||
|| Funções ||   Codificação de funções simples. Parâmteros passados por valor.       || Nenhum ||
|| Condicionais || Estruturas de controle if-else, switch-case, operador condicional ?:|| Funções ||
|| [http://code.google.com/p/easytesting/downloads/detail?name=iteracao-v0.9.zip&can=2&q= Iteração] || Estruturas de controle for, while, do-while  || Condicionais ||
|| [http://code.google.com/p/easytesting/downloads/detail?name=recursao-v0.9.zip&can=2&q= Recursão] || Codificação de sunções recursivas || Condicionais||
|| [http://code.google.com/p/easytesting/downloads/detail?name=vetores-v0.9.zip&can=2&q= Vetores] || Funções que realizam operações envolvendo arranjos. || [http://code.google.com/p/easytesting/downloads/detail?name=iteracao-v0.9.zip&can=2&q= Iteração]||
|| [http://code.google.com/p/easytesting/downloads/detail?name=matrizes-v0.9.zip&can=2&q= Matrizes] || Funções que realizam operações envolvendo arranjos de arranjos.  || [http://code.google.com/p/easytesting/downloads/detail?name=iteracao-v0.9.zip&can=2&q= Iteração]||
|| [http://code.google.com/p/easytesting/downloads/detail?name=registros-v0.9.zip&can=2&q= Registros]|| Introdução aos tipos abstratos de dados( TADs ) e suas funções associadas.  || [http://code.google.com/p/easytesting/downloads/detail?name=iteracao-v0.9.zip&can=2&q= Iteração]||
|| [http://code.google.com/p/easytesting/downloads/detail?name=complexo-v0.9.zip&can=2&q= Números Complexos]|| Codificação de TAD para números complexos e operações associadas || [http://code.google.com/p/easytesting/downloads/detail?name=registros-v0.9.zip&can=2&q= Registros]||
|| [http://code.google.com/p/easytesting/downloads/detail?name=complexo_polar-v0.9.zip&can=2&q= Complexos Polares]|| Codificação de TAD para números complexos na forma polar e operações associadas  || [http://code.google.com/p/easytesting/downloads/detail?name=registros-v0.9.zip&can=2&q= Registros]||
|| TAD para Polinômios || Codificação de TAD para polinômios complexos e operações associadas  || [http://code.google.com/p/easytesting/downloads/detail?name=registros-v0.9.zip&can=2&q= Registros], [http://code.google.com/p/easytesting/downloads/detail?name=vetores-v0.9.zip&can=2&q= Vetores] ||



==== Programação Básica Nível 2 ====



|| *Tópico* || *Assuntos abordados* || *Requisitos* ||
|| [http://code.google.com/p/easytesting/downloads/detail?name=list-v0.9.zip&can=2&q= List] ||   TAD lista encadeada.       || Nível 1 ||
|| Array Set || TAD conjunto (implementado usando vetores).  || Nível 1 ||
|| [http://code.google.com/p/easytesting/downloads/detail?name=linear_set-v0.9.zip&can=2&q= Linear Set] || TAD conjunto (implementado usando listas encadeadas).  || List ||
|| [http://code.google.com/p/easytesting/downloads/detail?name=hash_set-v0.8.zip&can=2&q= Hash Set] || TAD conjunto (implementado usando Linear sets). || Linear set||
|| [http://code.google.com/p/easytesting/downloads/detail?name=ordered_set-v0.9.zip&can=2&q= Ordered Set] || TAD Conjunto ordenado (implementado usando árvores binárias).  ||Binary tree||
|| [http://code.google.com/p/easytesting/downloads/detail?name=queue-v0.9.zip&can=2&q= Queue]|| TAD fila.  || List||
|| [http://code.google.com/p/easytesting/downloads/detail?name=queue-v0.9.zip&can=2&q= Stack] || TAD pilha.  || List ||


== Como Utilizar ==

O projeto de cada lista de exercícios é composto por um grupo de arquivos:

  * gtest.h
  * gtest.cc
  * xxx_test.cc
  * xxx_test.h
  * xxx.h
  * xxx.cc
  * main.cc
  * alguns ainda possuem mais um arquivo auxiliar

"xxx" está substituindo o nome do projeto. Gtest.cc e .h são arquivos de teste criados pelo Google (Google Test) para auxiliar a criação dos testes de unidade. Os arquivos xxx.h e .cc são os gabaritos das listas de exercícios, que serão testados pelo programa Easytesting e os arquivos xxx_test.cc e .h são os testes de unidade criados para cada lista de exercícios.
No projeto existem duas opções de compilação, _Easytesting_ e _Main_ . A Figura 1 abaixo indica como é feita a alteração dessas opções utilizando o IDE Code::Blocks:

[https://sites.google.com/site/matheuspachecao100/BuildTarget.png?attredirects=0&d=1]
Figura 1

O modo de compilação _Easytesting_ irá compilar e executar o teste da lista de exercícios. O modo _Main_ irá compilar o arquivo main.cc do exercício do aluno.

Ao escolher o modo _Easytesting_ e executar, o programa abrirá uma tela indicando os testes executados e os resultados de cada teste realizado. Para cada erro detectado haverá uma mensagem indicando - o. Assim será possível que o aluno descubra o erro e corrija o programa.

[https://sites.google.com/site/matheuspachecao100/Testes_corretos.png?attredirects=0&d=1]

Figura 2 - Testes sem indicação de erros

[https://sites.google.com/site/matheuspachecao100/Testes_com_erro.png?attredirects=0&d=1]

Figura 3 - Testes com indicação de erro

== Referências ==

[http://pt.wikipedia.org/wiki/Teste_de_unidade 1.] -> Link para a página do wikipedia que traz explicações sobre Testes de Unidade