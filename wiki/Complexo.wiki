#summary Casos de Teste da lista Complexo
= Funções =

A lista COMPLEXO é constituida de doze funções:

  * float Complexo::Real()
    - Retorna a parte real do número complexo corrente.
  * float Complexo::Imag()
    - Retorna a parte imaginária do número complexo corrente.
  * void Complexo::Atribuir(a, b)
    - Atribui, ao número complexo corrente, os valores das partes real (a) e imaginária (b).
  * float Complexo::Modulo()
    - Retorna o módulo do número complexo corrente.
  * bool Complexo::Igual(x)
    - Testa a igualdade entre o número complexo x e o número complexo corrente
  * void Complexo::Igualar(x)
    - Atribui o número complexo x ao número complexo corrente.
  * void Complexo::Conjugar(x)
    - Atribui o conjugado do número complexo x ao número complexo corrente.
  * void Complexo::Inverter(x)
    - Atribui o inverso multiplicativo do número complexo x ao número complexo corrente.
  * void Complexo::Somar(a, b)
    - Atribui o resultado da soma dos números complexos a e b ao número complexo corrente.
  * void Complexo::Subtrair(a, b)
    - Atribui o resultado da subtração entre os números complexos a e b ao número complexo corrente.
  * void Complexo::Multiplicar(a, b)
    - Atribui o resultado da multiplicação dos números complexos a e b ao número complexo corrente.
  * void Complexo::Dividir(a, b)
    - Atribui o resultado da divisão entre os números complexos a e b ao número complexo corrente.


= Casos de Teste =

Para criação do corretor desta lista de exercícios foram levadas em conta
varias entradas diferentes, com o intuito de cobrir todos os erros possíveis de serem ocorridos. Os casos de teste analisados são os seguintes:

- *float Complexo::Real()*
  * Números quaiquer para parte real
- *float Complexo::Imag()*
  * Números quaiquer para parte imaginária
- *void Complexo::Atribuir(a, b)*
  * Parte real positiva
  * Parte real negativa
  * Parte real nula
  * Parte imaginária positiva
  * Parte imaginária negativa
  * Parte imaginária nula
- *float Complexo::Modulo()*
  * Número complexo nulo
  * Número complexo negativo
  * Número complexo positivo
- *bool Complexo::Igual(x)*
  * Números complexos totalmente distintos
  * Números complexos com mesma parte real
  * Números complexos com mesma parte imaginária
  * Números complexos iguais
- *void Complexo::Igualar(x)*
  * Parte real
  * Parte imaginária
- *void Complexo::Conjugar(x)*
  * Número complexo nulo
  * Número complexo positivo
  * Número complexo negativo
- *void Complexo::Inverter(x)*
  * Parte real
  * Parte imaginária
- *void Complexo::Somar(a, b)*
  * Números complexos nulos
  * Números complexos positivos
  * Números complexos negativos
  * Números complexos com sinais opostos
- *void Complexo::Subtrair(a, b)*
  * Números complexos nulos
  * Números complexos positivos
  * Números complexos negativos
  * Números complexos com sinais opostos
- *void Complexo::Multiplicar(a, b)*
  * Números complexos nulos
  * Números complexos com mesmos sinais
  * Números complexos com sinais opostos
- *void Complexo::Dividir(a, b)*
  * Números complexos com mesmos sinais
  * Números complexos com sinais opostos